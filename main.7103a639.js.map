{"version":3,"sources":["scripts/main.js"],"names":["start","document","querySelector","restart","tableRows","querySelectorAll","score","messageContainer","startMessage","loseMessage","winMessage","isMobile","test","navigator","userAgent","textContent","addEventListener","style","display","hidden","addRandomNum","classList","add","sumOfScore","restartTable","e","key","moveUp","hasWon","hasLost","moveRight","moveDown","moveLeft","startX","startY","endX","endY","gameContainer","touches","clientX","clientY","changedTouches","diffX","diffY","Math","abs","board","forEach","row","splice","length","addTileInCSS","updateScore","num","insertAdjacentHTML","nextSibling","nextElementSibling","setTimeout","remove","deleteZero","filter","cell","move","tr","i","push","hasEmptyTile","col","floor","random","randomCell","children","canMove","trChildren","r","reverse"],"mappings":"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","file":"main.7103a639.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst start = document.querySelector('.start');\nconst restart = document.querySelector('.restart');\nconst tableRows = document.querySelectorAll('tr');\nconst score = document.querySelector('.game-score');\nconst messageContainer = document.querySelector('.message-container');\nconst startMessage = document.querySelector('.message-start');\nconst loseMessage = document.querySelector('.message-lose');\nconst winMessage = document.querySelector('.message-win');\n\nconst isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n\nif (isMobile) {\n  startMessage.textContent = `HOW TO PLAY: Swipe with your fingers to move\n    the tiles. Tiles with the same number merge into one when they touch.\n    Add them up to reach 2048! Good luck!`;\n}\n\nstart.addEventListener('click', () => {\n  messageContainer.style.display = 'none';\n  start.hidden = true;\n  restart.hidden = false;\n  startMessage.hidden = true;\n\n  addRandomNum();\n  addRandomNum();\n});\n\nrestart.addEventListener('click', () => {\n  messageContainer.style.display = 'none';\n  loseMessage.classList.add('hidden');\n  winMessage.classList.add('hidden');\n  score.textContent = '0';\n  sumOfScore = 0;\n\n  restartTable();\n  addRandomNum();\n});\n\ndocument.addEventListener('keyup', e => {\n  if (e.key === 'ArrowUp') {\n    moveUp();\n    hasWon();\n    hasLost();\n  }\n\n  if (e.key === 'ArrowRight') {\n    moveRight();\n    hasWon();\n    hasLost();\n  }\n\n  if (e.key === 'ArrowDown') {\n    moveDown();\n    hasWon();\n    hasLost();\n  }\n\n  if (e.key === 'ArrowLeft') {\n    moveLeft();\n    hasWon();\n    hasLost();\n  }\n});\n\nconst gameContainer = document.querySelector('.game-container');\nlet startX, startY, endX, endY;\n\ngameContainer.addEventListener('touchstart', e => {\n  startX = e.touches[0].clientX;\n  startY = e.touches[0].clientY;\n});\n\ngameContainer.addEventListener('touchend', e => {\n  endX = e.changedTouches[0].clientX;\n  endY = e.changedTouches[0].clientY;\n\n  const diffX = endX - startX;\n  const diffY = endY - startY;\n\n  if (Math.abs(diffX) > Math.abs(diffY)) {\n    if (diffX > 0) {\n      moveRight();\n      hasWon();\n      hasLost();\n    } else {\n      moveLeft();\n      hasWon();\n      hasLost();\n    }\n  } else {\n    if (diffY > 0) {\n      moveDown();\n      hasWon();\n      hasLost();\n    } else {\n      moveUp();\n      hasWon();\n      hasLost();\n    }\n  }\n});\n\nconst board = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nfunction restartTable() {\n  board.forEach(row => {\n    row.splice(0, row.length, 0, 0, 0, 0);\n  });\n\n  addTileInCSS();\n}\n\nlet sumOfScore = 0;\n\nfunction updateScore(num) {\n  sumOfScore += num;\n  score.textContent = sumOfScore;\n\n  score.insertAdjacentHTML('afterend', `\n    <span class=\"score-update\">+${num}</span>\n  `);\n\n  const nextSibling = score.nextElementSibling;\n\n  setTimeout(() => {\n    nextSibling.remove();\n  }, 1000);\n}\n\nfunction deleteZero(row) {\n  return row.filter(cell => cell !== 0);\n}\n\nfunction move(tr) {\n  let row = deleteZero(tr);\n\n  for (let i = 0; i < row.length - 1; i++) {\n    if (row[i] === row[i + 1]) {\n      row[i] *= 2;\n      row[i + 1] = 0;\n      updateScore(row[i]);\n    }\n  }\n\n  row = deleteZero(row);\n\n  while (row.length < board.length) {\n    row.push(0);\n  }\n\n  return row;\n}\n\nfunction hasEmptyTile() {\n  for (let row = 0; row < board.length; row++) {\n    for (let col = 0; col < board[row].length; col++) {\n      if (board[row][col] === 0) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction addRandomNum() {\n  if (!hasEmptyTile()) {\n    return;\n  }\n\n  while (true) {\n    const row = Math.floor(Math.random() * 4);\n    const col = Math.floor(Math.random() * 4);\n\n    if (board[row][col] === 0) {\n      const random = Math.random() < 0.9 ? 2 : 4;\n\n      board[row][col] = random;\n\n      const randomCell = tableRows[row].children[col];\n\n      randomCell.classList.add(`field-cell--${random}`);\n      randomCell.textContent = random;\n\n      break;\n    }\n  }\n}\n\nfunction addTileInCSS() {\n  let canMove = false;\n\n  for (let row = 0; row < board.length; row++) {\n    const tr = board[row];\n\n    const trChildren = tableRows[row].children;\n\n    for (let col = 0; col < tr.length; col++) {\n      const cell = trChildren[col];\n\n      if (!tr[col] && cell.textContent !== '') {\n        cell.classList.remove(`field-cell--${cell.textContent}`);\n        cell.textContent = '';\n        canMove = true;\n      }\n\n      if (tr[col]) {\n        cell.classList.remove(`field-cell--${cell.textContent}`);\n        cell.classList.add(`field-cell--${tr[col]}`);\n        cell.textContent = tr[col];\n      }\n    }\n  }\n\n  if (canMove) {\n    addRandomNum();\n  }\n}\n\nfunction moveUp() {\n  for (let col = 0; col < board.length; col++) {\n    let row = [board[0][col], board[1][col], board[2][col], board[3][col]];\n\n    row = move(row);\n    board[0][col] = row[0];\n    board[1][col] = row[1];\n    board[2][col] = row[2];\n    board[3][col] = row[3];\n  }\n\n  addTileInCSS();\n}\n\nfunction moveRight() {\n  for (let r = 0; r < board.length; r++) {\n    let row = board[r];\n\n    row.reverse();\n    row = move(row);\n    row.reverse();\n    board[r] = row;\n  }\n\n  addTileInCSS();\n}\n\nfunction moveDown() {\n  for (let col = 0; col < board.length; col++) {\n    let row = [board[0][col], board[1][col], board[2][col], board[3][col]];\n\n    row.reverse();\n    row = move(row);\n    row.reverse();\n\n    board[0][col] = row[0];\n    board[1][col] = row[1];\n    board[2][col] = row[2];\n    board[3][col] = row[3];\n  }\n\n  addTileInCSS();\n}\n\nfunction moveLeft() {\n  for (let r = 0; r < board.length; r++) {\n    let row = board[r];\n\n    row = move(row);\n    board[r] = row;\n  }\n\n  addTileInCSS();\n}\n\nfunction hasWon() {\n  board.forEach(row => {\n    row.forEach(cell => {\n      if (cell === 2048) {\n        messageContainer.style.display = 'flex';\n        winMessage.classList.remove('hidden');\n      }\n    });\n  });\n}\n\nfunction hasLost() {\n  if (!hasEmptyTile()) {\n    for (let row = 0; row < board.length; row++) {\n      for (let col = 0; col < board[row].length; col++) {\n        if (col < board[row].length - 1\n          && board[row][col] === board[row][col + 1]) {\n          return true;\n        }\n\n        if (row < board.length - 1\n          && board[row][col] === board[row + 1][col]) {\n          return true;\n        }\n      }\n    }\n\n    messageContainer.style.display = 'flex';\n    loseMessage.classList.remove('hidden');\n  }\n}\n"]}